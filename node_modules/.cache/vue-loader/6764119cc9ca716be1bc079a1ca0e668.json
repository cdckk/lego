{"remainingRequest":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\vue3-project\\lego\\src\\components\\InlineEdit.vue?vue&type=template&id=0014d0f3&ts=true","dependencies":[{"path":"D:\\vue3-project\\lego\\src\\components\\InlineEdit.vue","mtime":1678172947848},{"path":"D:\\vue3-project\\lego\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674816758787},{"path":"D:\\vue3-project\\lego\\node_modules\\babel-loader\\lib\\index.js","mtime":1674816767357},{"path":"D:\\vue3-project\\lego\\node_modules\\ts-loader\\index.js","mtime":1674816768512},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1674816774476},{"path":"D:\\vue3-project\\lego\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674816758787},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1674816769351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYNCiAgICBjbGFzcz0iaW5saW5lLWVkaXQiIA0KICAgIEBjbGljay5zdG9wPSJoYW5kbGVDbGljayINCiAgICByZWY9IndyYXBwZXIiDQogID4NCiAgICA8aW5wdXQNCiAgICAgIHYtbW9kZWw9ImlubmVyVmFsdWUiDQogICAgICB2LWlmPSJpc0VkaXRpbmciDQogICAgICBwbGFjZWhvbGRlcj0i5paH5pys5LiN6IO95Li656m6Ig0KICAgICAgcmVmPSJpbnB1dFJlZiINCiAgICAgIHR5cGU9InRleHQiIC8+DQogICAgPHNsb3Qgdi1lbHNlPjxzcGFuIGNsYXNzPSJlZGl0LXRleHQiPnt7aW5uZXJWYWx1ZX19PC9zcGFuPjwvc2xvdD4NCiAgPC9kaXY+DQo="},{"version":3,"sources":["D:\\vue3-project\\lego\\src\\components\\InlineEdit.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC;IACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACd;IACE,CAAC,CAAC,CAAC,CAAC,CAAC;MACH,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IACf,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAClE,CAAC,CAAC,CAAC,CAAC,CAAC","file":"D:/vue3-project/lego/src/components/InlineEdit.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div\r\n    class=\"inline-edit\" \r\n    @click.stop=\"handleClick\"\r\n    ref=\"wrapper\"\r\n  >\r\n    <input\r\n      v-model=\"innerValue\"\r\n      v-if=\"isEditing\"\r\n      placeholder=\"文本不能为空\"\r\n      ref=\"inputRef\"\r\n      type=\"text\" />\r\n    <slot v-else><span class=\"edit-text\">{{innerValue}}</span></slot>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, defineProps, defineEmits, watch, nextTick } from 'vue'\r\nimport useKeyPress from '../hooks/useKeyPress'\r\nimport useClickOutside from '../hooks/useClickOutside'\r\nconst props = defineProps({\r\n  value: {\r\n    type: String,\r\n    request: true\r\n  }\r\n})\r\nlet cacheOldValue: string | undefined = ''\r\nconst emit = defineEmits(['change'])\r\nconst innerValue = ref(props.value)\r\n// 属性更新时内部数据还是旧的\r\nwatch(() => props.value, (newValue) => {\r\n  // if (newValue) {\r\n  innerValue.value = newValue\r\n  // }\r\n})\r\nconst isEditing = ref<boolean>(false)\r\nconst wrapper = ref<null | HTMLElement>(null)\r\nconst inputRef = ref<null | HTMLElement>(null)\r\nconst isOutside = useClickOutside(wrapper)\r\nwatch(isOutside, (newValue) => {\r\n  console.log(isOutside.value,newValue)\r\n  if (newValue && isEditing.value) {\r\n    isEditing.value = false\r\n    emit('change', innerValue.value)\r\n  }\r\n  isOutside.value = false\r\n})\r\nwatch(isEditing, async (isEditing) => {\r\n  if (isEditing) {\r\n    cacheOldValue = innerValue.value\r\n    await nextTick()\r\n    if (inputRef.value) {\r\n      inputRef.value.focus()\r\n    }\r\n  }\r\n})\r\nconst handleClick = () => {\r\n  isEditing.value = true\r\n  console.log('点组件');\r\n  \r\n  /**\r\n   * 组件更新是异步的\r\n   */\r\n  // setTimeout(() => {\r\n  //   if (inputRef.value) {\r\n  //     inputRef.value.focus()\r\n  //   }\r\n  // }, 500);\r\n  \r\n}\r\nuseKeyPress('Enter', () => {\r\n  console.log('enter事件');\r\n  \r\n  if (isEditing.value) {\r\n    isEditing.value = false\r\n    emit('change', innerValue.value)\r\n  }\r\n})\r\nuseKeyPress('Escape', () => {\r\n  if (isEditing.value) {\r\n    isEditing.value = false\r\n    innerValue.value = cacheOldValue\r\n  }\r\n})\r\n\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n\r\n</style>\r\n"]}]}