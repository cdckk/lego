{"remainingRequest":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\vue3-project\\lego\\src\\components\\Uploader.vue?vue&type=style&index=0&id=3c8050c4&scoped=true&lang=less","dependencies":[{"path":"D:\\vue3-project\\lego\\src\\components\\Uploader.vue","mtime":1679631708047},{"path":"D:\\vue3-project\\lego\\node_modules\\css-loader\\dist\\cjs.js","mtime":1674816762302},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1674816774292},{"path":"D:\\vue3-project\\lego\\node_modules\\postcss-loader\\src\\index.js","mtime":1674816765546},{"path":"D:\\vue3-project\\lego\\node_modules\\less-loader\\dist\\cjs.js","mtime":1675142517940},{"path":"D:\\vue3-project\\lego\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674816758787},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1674816769351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudXBsb2FkLWxvYWRpbmcgew0KICBjb2xvcjogeWVsbG93Ow0KfQ0KLnVwbG9hZC1zdWNjZXNzIHsNCiAgY29sb3I6IGdyZWVuOw0KfQ0KLnVwbG9hZC1lcnJvciB7DQogIGNvbG9yOiByZWQ7DQp9DQoudXBsb2FkLWxpc3Qgew0KICBtYXJnaW46IDA7DQogIHBhZGRpbmc6IDA7DQogIGxpc3Qtc3R5bGUtdHlwZTogbm9uZTsNCn0NCi51cGxvYWRpbmctbGlzdCBsaSB7DQogIHRyYW5zaXRpb246IGFsbCAuNXMgY3ViaWMtYmV6aWVyKC41NSwwLC4xLDEpOw0KICBmb250LXNpemU6IDE0cHg7DQogIGxpbmUtaGVpZ2h0OiAxLjg7DQogIG1hcmdpbi10b3A6IDVweDsNCiAgYm94LXNpemluZzogYm9yZGVyLWJveDsNCiAgYm9yZGVyLXJhZGl1czogNHB4Ow0KICBtaW4td2lkdGg6IDIwMHB4Ow0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogICY6Zmlyc3QtY2hpbGQgew0KICAgIG1hcmdpbi10b3A6IDEwcHg7DQogIH0NCiAgLmZpbGUtaWNvbiB7DQogICAgc3ZnIHsNCiAgICAgIG1hcmdpbi1yaWdodDogNXB4Ow0KICAgICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgMC40NSk7DQogICAgfQ0KICB9DQogIC5maWxlbmFtZSB7DQogICAgbWFyZ2luLWxlZnQ6IDVweDsNCiAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7DQogIH0NCiAgJi51cGxvYWQtZXJyb3Igew0KICAgIGNvbG9yOiAjZjUyMjJkOw0KICAgIHN2ZyB7DQogICAgICBjb2xvcjogI2Y1MjIyZA0KICAgIH0NCiAgfQ0KICAvLyAuZmlsZS1zdGF0dXMge30NCn0NCi51cGxvYWQtbGlzdC10aHVtYm5haWwgew0KICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7DQogIHdpZHRoOiA3MHB4Ow0KICBoZWlnaHQ6IDcwcHg7DQogIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7DQogIC8vIHBvc2l0aW9uOiByZWxhdGl2ZTsNCiAgLy8gei1pbmRleDogMTsNCn0NCg=="},{"version":3,"sources":["D:\\vue3-project\\lego\\src\\components\\Uploader.vue"],"names":[],"mappings":"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","file":"D:/vue3-project/lego/src/components/Uploader.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"file-upload\">\r\n    <div class=\"upload-area\"\r\n      :class=\"{'is-dragover': drag && isDragOver }\"\r\n      v-on=\"events\"\r\n    >\r\n    <!-- v-on可以添加多个事件以对象的形式 -->\r\n    <!-- @click=\"triggerUploader\" -->\r\n      <slot v-if=\"isUploading\" name=\"loading\">\r\n        <button disabled>正在上传</button>\r\n      </slot>\r\n      <slot name=\"uploaded\" v-else-if=\"lastFileData && lastFileData.loaded\" :uploadedData=\"lastFileData.data\">\r\n        <button>点击上传</button>\r\n      </slot>\r\n      <slot v-else name=\"default\">\r\n        <!-- 插槽里的内容是默认显示，如果父组件有内容会被替换 -->\r\n        <button>点击上传</button>\r\n      </slot>\r\n    </div>\r\n    <input\r\n      type=\"file\"\r\n      ref=\"fileInput\"\r\n      @change=\"handleFileChange\"\r\n    />\r\n    <!-- :style=\"{display: 'none'}\" -->\r\n    <ul :class=\"`upload-list upload-list-${listType}`\">\r\n      <li\r\n        :class=\"`uploaded-file upload-${file.status}`\"\r\n        v-for=\"file in filesList\"\r\n        :key=\"file.uid\"\r\n      >\r\n        <FileImageOutlined />\r\n        <img\r\n          v-if=\"file.url && listType === 'picture'\"\r\n          :src=\"file.url\" \r\n          :alt=\"file.name\"\r\n          class=\"upload-list-thumbnail\"\r\n        />\r\n        <span v-if=\"file.status === 'loading'\" class=\"file-icon\"><LoadingOutlined /></span>\r\n        <span v-else class=\"file-icon\"><FileOutlined/></span>\r\n        <span class=\"filename\">{{file.name}}</span>\r\n        <button class=\"delete-icon\" @click=\"removeFile(file.uid)\">删除</button>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { ref, defineProps, reactive, computed, PropType, defineExpose } from 'vue'\r\nimport FileImageOutlined, {LoadingOutlined, FileOutlined} from '../../node_modules/@ant-design/icons-vue'\r\nimport axios from 'axios'\r\nimport { v4 as uuidv4} from 'uuid'\r\nimport { last } from 'lodash-es'\r\nimport { useStore } from 'vuex'\r\nimport {ImageComponentProps} from '../defaultProps'\r\nimport { getImageDimensions } from '../helper'\r\n\r\ntype uploadStatus = 'ready' | 'loading' | 'success' | 'error'\r\n// picture带预览的功能\r\ntype FileListType = 'picture' | 'text '\r\ntype CheckUpload = (file: File) => boolean | Promise<File>\r\nexport interface UploadFile {\r\n uid: string;\r\n name: string;\r\n size: number;\r\n status: string;\r\n raw: File;\r\n resp?: any;\r\n url?: string;\r\n width?: number;\r\n}\r\n\r\nconst props = defineProps({\r\n  action: {\r\n    type: String,\r\n    default: 'http://localhost:3000/data'\r\n  },\r\n  beforeUpload: {\r\n    type: Function as PropType<CheckUpload>\r\n  },\r\n  // 是否开启拖拽上传\r\n  drag: {\r\n    type: Boolean,\r\n    default: false\r\n  },\r\n  // 默认自动上传\r\n  autoUpload: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  listType: {\r\n    type: String as PropType<FileListType>,\r\n    default: 'text'\r\n  },\r\n  showUploadedList: {\r\n    type: Boolean,\r\n    default: true\r\n  }\r\n})\r\n\r\nconst store = useStore()\r\n\r\nconst fileInput = ref<null | HTMLInputElement>(null)\r\nconst fileStatus = ref<uploadStatus>('ready')\r\nconst filesList = ref<UploadFile[]>([])\r\n// const uploadedFiles = ref<UploadFile[]>([])\r\nconst isDragOver = ref(false)\r\nconst isUploading = computed(() => {\r\n  // 只要有一项的等于loading，整个按钮就是isloading\r\n  return filesList.value.some(file => file.status === 'loading' )\r\n})\r\nconst lastFileData = computed(() => {\r\n  const lastFile = last(filesList.value)\r\n  if (lastFile) {\r\n    return {\r\n      loaded: lastFile.status === 'success',\r\n      data: lastFile.resp\r\n    }\r\n  }\r\n  return false\r\n})\r\nconst removeFile = (id: string) => {\r\n  filesList.value = filesList.value.filter(file => {\r\n    return file.uid !== id\r\n  })\r\n}\r\n\r\nconst triggerUploader = () => {\r\n  if (fileInput.value) {\r\n    fileInput.value.click()\r\n  }\r\n}\r\n\r\nconst postFile = (readyFile: UploadFile) => {\r\n  const formData = new FormData() \r\n  // const iseExistence = uploadedFiles.value.some((file) => file.name === fileObj.name )\r\n  // if(!iseExistence) {\r\n  // uploadedFiles.value.push(fileObj)\r\n  // }\r\n  \r\n  formData.append(readyFile.name, readyFile.raw)\r\n  console.dir('formdata', formData);\r\n  \r\n  readyFile.status = 'loading'\r\n  axios.post(props.action, formData, {\r\n    headers: {\r\n      'Content-Type': 'multipart/form-data'\r\n    }\r\n  }).then(res => {\r\n    console.log('上传成功',res.data);\r\n    // console.log(readyFile.raw);\r\n    // console.log(readyFile.url);\r\n    res.data.url = readyFile.url\r\n    fileStatus.value = 'success'\r\n    readyFile.status = 'success'\r\n    \r\n    const getWidth = (width: number) => {\r\n      const maxWidth = 375\r\n      res.data.width = (width > maxWidth) ? maxWidth : width\r\n    }\r\n    try {\r\n      getImageDimensions(res.data.url).then(async ({width}) => {\r\n      // getImageDimensions(readyFile.resp.url).then(async ({width}) => {\r\n        await getWidth(width)\r\n        // console.log('res.data', res.data);\r\n        \r\n      })\r\n    } catch (error) {\r\n      console.log('error', error);\r\n    }\r\n    readyFile.resp = res.data\r\n    // console.log('readyFile.resp.width',readyFile.resp.width);\r\n    setTimeout(() => {\r\n      const imageProps: Partial<ImageComponentProps> = {\r\n        src: readyFile.resp.url,\r\n        width: readyFile.resp.width\r\n      }\r\n      // console.log('imageProps',imageProps);\r\n      store.commit('addComponent', imageProps)\r\n    }, 500)\r\n    \r\n  }).catch((err) => {\r\n    console.log('上传失败', err);\r\n    fileStatus.value = 'error'\r\n    readyFile.status = 'error'\r\n  }).finally(() => {\r\n    if (fileInput.value) {\r\n      fileInput.value.value = ''\r\n    }\r\n  })\r\n}\r\n\r\nconst addFileToList = (uploadedFile: File) => {\r\n  const fileObj = reactive<UploadFile>({\r\n    uid: uuidv4(),\r\n    size: uploadedFile.size,\r\n    name: uploadedFile.name,\r\n    status: 'ready',\r\n    raw: uploadedFile\r\n  })\r\n  if (props.listType === 'picture') {\r\n    // 防止转换错误\r\n    // try {\r\n    //   fileObj.url = URL.createObjectURL(uploadedFile)\r\n    // } catch (err) {\r\n    //   console.error('upload file error', err)\r\n    // }\r\n    const fileReader = new FileReader()\r\n    fileReader.readAsDataURL(uploadedFile)\r\n    fileReader.addEventListener('load', () => {\r\n      fileObj.url = fileReader.result as string\r\n    })\r\n  }\r\n  filesList.value.push(fileObj)\r\n  // console.log(filesList.value);\r\n  \r\n  if (props.autoUpload) {\r\n    postFile(fileObj)\r\n  }\r\n}\r\n\r\nconst beforeUploadCheck = (files: null | FileList) => {\r\n  if (files) {\r\n    const uploadedFile = files[0]\r\n    // 上传前的检查\r\n    if (props.beforeUpload) {\r\n      const result = props.beforeUpload(uploadedFile)\r\n      if (result && result instanceof Promise) {\r\n        result.then(processFile => {\r\n          /**\r\n           * 新冒出来的对象，并不知道是什么类型，直接进行处理会有问题\r\n           */\r\n          // 这里并不知道processFile的类型，要判断\r\n          if (processFile instanceof File) {\r\n            addFileToList(processFile)\r\n          } else {\r\n            throw new Error('beforeUpload Promise should return File object')\r\n          }\r\n        }).catch(e => {\r\n          console.log(e);\r\n        })\r\n      } else if (result === true) {\r\n        addFileToList(uploadedFile)\r\n      }\r\n    } else {\r\n      addFileToList(uploadedFile)\r\n    }\r\n  }\r\n}\r\n\r\n// 暴露出uploadFiles方法\r\nconst uploadFiles = () => {\r\n  filesList.value.filter(file => file.status = 'ready').forEach(readyFile => postFile(readyFile))\r\n}\r\n\r\nlet events: { [key: string]: (e: any) => void } = {\r\n  'click': triggerUploader\r\n}\r\n\r\n// 当上传框有图片\r\nconst handleFileChange = (e: Event) => {\r\n  // console.log(e);\r\n  \r\n  const target = e.target as HTMLInputElement\r\n  const files = target.files\r\n  beforeUploadCheck(files)\r\n}\r\n\r\n// 拖\r\nconst handleDrag = (e: DragEvent, over: boolean) => {\r\n  // 第二个参数代表class添加或者不添加\r\n  e.preventDefault()\r\n  isDragOver.value = over\r\n}\r\n// 落下\r\nconst handleDrop = (e: DragEvent) => {\r\n  e.preventDefault()\r\n  isDragOver.value = false\r\n  if (e.dataTransfer) {\r\n    // 拿到托放下的数据\r\n    beforeUploadCheck(e.dataTransfer.files)\r\n  }\r\n}\r\n\r\n// 添加其他的事件\r\nif (props.drag) {\r\n  events = {\r\n    ...events,\r\n    'dragover': (e: DragEvent) => { handleDrag(e, true) },\r\n    'dragleave': (e: DragEvent) => { handleDrag(e, false) },\r\n    'drop': handleDrop\r\n  }\r\n}\r\n\r\ndefineExpose({\r\n  uploadFiles\r\n})\r\n\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.upload-loading {\r\n  color: yellow;\r\n}\r\n.upload-success {\r\n  color: green;\r\n}\r\n.upload-error {\r\n  color: red;\r\n}\r\n.upload-list {\r\n  margin: 0;\r\n  padding: 0;\r\n  list-style-type: none;\r\n}\r\n.uploading-list li {\r\n  transition: all .5s cubic-bezier(.55,0,.1,1);\r\n  font-size: 14px;\r\n  line-height: 1.8;\r\n  margin-top: 5px;\r\n  box-sizing: border-box;\r\n  border-radius: 4px;\r\n  min-width: 200px;\r\n  position: relative;\r\n  &:first-child {\r\n    margin-top: 10px;\r\n  }\r\n  .file-icon {\r\n    svg {\r\n      margin-right: 5px;\r\n      color: rgba(0, 0, 0, 0.45);\r\n    }\r\n  }\r\n  .filename {\r\n    margin-left: 5px;\r\n    margin-right: 40px;\r\n  }\r\n  &.upload-error {\r\n    color: #f5222d;\r\n    svg {\r\n      color: #f5222d\r\n    }\r\n  }\r\n  // .file-status {}\r\n}\r\n.upload-list-thumbnail {\r\n  display: inline-block;\r\n  width: 70px;\r\n  height: 70px;\r\n  vertical-align: middle;\r\n  // position: relative;\r\n  // z-index: 1;\r\n}\r\n</style>"]}]}