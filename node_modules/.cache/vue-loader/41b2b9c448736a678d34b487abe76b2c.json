{"remainingRequest":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\vue3-project\\lego\\src\\components\\ImageProcesser.vue?vue&type=template&id=87a4c41e&scoped=true&ts=true","dependencies":[{"path":"D:\\vue3-project\\lego\\src\\components\\ImageProcesser.vue","mtime":1677726506345},{"path":"D:\\vue3-project\\lego\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674816758787},{"path":"D:\\vue3-project\\lego\\node_modules\\babel-loader\\lib\\index.js","mtime":1674816767357},{"path":"D:\\vue3-project\\lego\\node_modules\\ts-loader\\index.js","mtime":1674816768512},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":1674816774476},{"path":"D:\\vue3-project\\lego\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674816758787},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1674816769351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9ImltYWdlLXByb2Nlc3NlciI+DQogICAgPGEtbW9kYWwNCiAgICAgIHYtbW9kZWw6dmlzaWJsZT0ic2hvd01vZGVsIg0KICAgICAgdGl0bGU9IuijgeWJquWbvueJhyINCiAgICAgIDpjb25maXJtLWxvYWRpbmc9ImNvbmZpcm1Mb2FkaW5nIg0KICAgICAgQG9rPSJoYW5kbGVPayINCiAgICAgIEBjYW5jZWw9InNob3dNb2RlbCA9IGZhbHNlIg0KICAgICAgb2tUZXh0PSLnoa7orqQiDQogICAgICBjYW5jZWxUZXh0PSLlj5bmtogiDQogICAgPg0KICAgICAgPGRpdiBjbGFzcz0iaW1hZ2UtY3JvcHBlciI+DQogICAgICAgIDxpbWcgcmVmPSJjcm9wcGVySW1nIiA6c3JjPSJwcm9wcy5wcm9wcy5zcmMiIGlkPSJwcm9jZXNzZWQtaW1hZ2UiIGFsdD0iIj4NCiAgICAgIDwvZGl2Pg0KICAgIDwvYS1tb2RhbD4NCiAgICA8ZGl2IGNsYXNzPSJpbWFnZS1wcmV2aWV3IiA6c3R5bGU9InsgYmFja2dyb3VuZEltYWdlOiBiYWNrZ3JvdW5kVXJsIH0iPg0KICAgICAgPGltZyA6c3JjPSJwcm9wcy5wcm9wcy5zcmMiIHN0eWxlPSJ3aWR0aDogMTAwJSIgYWx0PSIiPg0KICAgIDwvZGl2Pg0KICAgIDxkaXYgY2xhc3M9ImltYWdlLXByb2Nlc3MiPg0KICAgICAgPHN0eWxlLXVwbG9hZGVyPjwvc3R5bGUtdXBsb2FkZXI+DQogICAgICA8YS1idXR0b24gQGNsaWNrPSJzaG93TW9kZWwgPSB0cnVlIj4NCiAgICAgICAgPHNjaXNzb3Itb3V0bGluZWQgLz4NCiAgICAgICAg5Ymq6KOB5Zu+54mHDQogICAgICA8L2EtYnV0dG9uPg0KICAgIDwvZGl2Pg0KICA8L2Rpdj4NCg=="},{"version":3,"sources":["D:\\vue3-project\\lego\\src\\components\\ImageProcesser.vue"],"names":[],"mappings":"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","file":"D:/vue3-project/lego/src/components/ImageProcesser.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"image-processer\">\r\n    <a-modal\r\n      v-model:visible=\"showModel\"\r\n      title=\"裁剪图片\"\r\n      :confirm-loading=\"confirmLoading\"\r\n      @ok=\"handleOk\"\r\n      @cancel=\"showModel = false\"\r\n      okText=\"确认\"\r\n      cancelText=\"取消\"\r\n    >\r\n      <div class=\"image-cropper\">\r\n        <img ref=\"cropperImg\" :src=\"props.props.src\" id=\"processed-image\" alt=\"\">\r\n      </div>\r\n    </a-modal>\r\n    <div class=\"image-preview\" :style=\"{ backgroundImage: backgroundUrl }\">\r\n      <img :src=\"props.props.src\" style=\"width: 100%\" alt=\"\">\r\n    </div>\r\n    <div class=\"image-process\">\r\n      <style-uploader></style-uploader>\r\n      <a-button @click=\"showModel = true\">\r\n        <scissor-outlined />\r\n        剪裁图片\r\n      </a-button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport axios from 'axios'\r\nimport { ScissorOutlined } from '@ant-design/icons-vue';\r\nimport { ref, watch, defineProps, PropType, nextTick, defineEmits, computed } from 'vue'\r\nimport { StyleUploader } from '../components/StyleUploader'\r\nimport Cropper from 'cropperjs'\r\n// 应该在model出现之前初始化\r\nimport { ImageComponentProps } from '../defaultProps'\r\n\r\nexport interface CropDataProps {\r\n  x: number;\r\n  y: number;\r\n  width: number;\r\n  height: number;\r\n}\r\n\r\nconst showModel = ref<boolean>(false)\r\n// const backgroundUrl = computed(() => `url(${props.value})`)\r\n// const baseImageUrl = \r\nconst cropperImg = ref<HTMLImageElement | null>(null)\r\nconst imgUrl = ref<string>()\r\nlet cropper: Cropper\r\n// 裁剪的值\r\nlet cropData: CropDataProps | null = null\r\nconst props = defineProps({\r\n  props: {\r\n    type: Object as PropType<Partial<ImageComponentProps>> | undefined\r\n  }\r\n})\r\nconst emit = defineEmits(['change', 'uploaded'])\r\nwatch(showModel, async (newValue) => {\r\n  if (newValue) {\r\n    await nextTick()\r\n    if (cropperImg.value) {\r\n      cropper = new Cropper(cropperImg.value, {\r\n        aspectRatio: 16 / 9,\r\n        crop(event) {\r\n          // console.log(event.detail.x);\r\n          // console.log(event.detail.y);\r\n          // console.log(event.detail.width);\r\n          // console.log(event.detail.height);\r\n          // console.log(event.detail.rotate);\r\n          // console.log(event.detail.scaleX);\r\n          // console.log(event.detail.scaleY);\r\n          const { x, y, width, height } = event.detail\r\n          // 为什么不直接赋值呢，因为要进行转换\r\n          cropData = {\r\n            x: Math.floor(x),\r\n            y: Math.floor(y),\r\n            width: Math.floor(width),\r\n            height: Math.floor(height)\r\n          }\r\n        }\r\n      })\r\n    }\r\n  } else {\r\n    if(cropper) {\r\n      cropper.destroy()\r\n    }\r\n  }\r\n  \r\n})\r\nconst handleOk = () => {\r\n  if (cropData) {\r\n    const { x, y, width, height } = cropData\r\n    // const cropperURL = props.props?.src + `?x-oss-process=image/crop,x_${x},y_${y},width_${width},height_${height}`\r\n    // console.log('cropperURL', cropperURL)\r\n    cropper.getCroppedCanvas().toBlob((blob) => {\r\n      if (blob) {\r\n        const formData = new FormData()\r\n        formData.append('croppedImage', blob, 'test.png')\r\n        axios.post('http://localhost:3000/img', formData, {\r\n          headers: {\r\n            'Content-type': 'multipart/form-data'\r\n          }\r\n        }).then(res => {\r\n          console.log('formData', formData);\r\n          \r\n          emit('change', res.data.data.url)\r\n          console.log(res.data.data.url);\r\n          \r\n          showModel.value = false\r\n        })\r\n      }\r\n    })\r\n    // 更新新的URL\r\n  }\r\n  \r\n}\r\n// 监听图片有没有传过来\r\n// watch(props.props, (newValue) => {\r\n//   console.log('newvalue', newValue);\r\n//   imgUrl.value = newValue\r\n// },{ immediate: true })\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.image-processer {\r\n  display: flex;\r\n  justify-content: space-between;\r\n}\r\n.image-preview {\r\n  width: 150px;\r\n  height: 84px;\r\n  border: 1px dashed #e6ebed;\r\n  background: no-repeat 50%/contain;\r\n  img {\r\n    width: 100%;\r\n    height: 100%;\r\n  }\r\n}\r\n.image-preview.extraHeight {\r\n  height: 110px;\r\n}\r\n.image-cropper img {\r\n  display: block;\r\n  max-width: 100%;\r\n}\r\n.image-process {\r\n  padding: 5px 0;\r\n  margin-left: 10px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n}\r\n</style>\r\n"]}]}