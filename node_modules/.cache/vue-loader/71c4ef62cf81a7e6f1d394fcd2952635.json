{"remainingRequest":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js??ref--1-1!D:\\vue3-project\\lego\\src\\components\\PropsTable.vue?vue&type=style&index=0&id=16ea9924&scoped=true&lang=less","dependencies":[{"path":"D:\\vue3-project\\lego\\src\\components\\PropsTable.vue","mtime":1675685933398},{"path":"D:\\vue3-project\\lego\\node_modules\\css-loader\\dist\\cjs.js","mtime":1674816762302},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":1674816774292},{"path":"D:\\vue3-project\\lego\\node_modules\\postcss-loader\\src\\index.js","mtime":1674816765546},{"path":"D:\\vue3-project\\lego\\node_modules\\less-loader\\dist\\cjs.js","mtime":1675142517940},{"path":"D:\\vue3-project\\lego\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1674816758787},{"path":"D:\\vue3-project\\lego\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":1674816769351}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucHJvcC1pdGVtIHsNCiAgZGlzcGxheTogZmxleDsNCiAgbWFyZ2luLWJvdHRvbTogMTBweDsNCiAgYWxpZ24taXRlbXM6IGNlbnRlcjsNCn0NCi5sYWJlbCB7DQogIHdpZHRoOiAyOCU7DQp9DQoucHJvcC1jb21wb25lbnQgew0KICB3aWR0aDogNzIlOw0KfQ0K"},{"version":3,"sources":["D:\\vue3-project\\lego\\src\\components\\PropsTable.vue"],"names":[],"mappings":";AAqEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACb,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACnB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACZ;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACZ","file":"D:/vue3-project/lego/src/components/PropsTable.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"props-table\">\r\n    <div\r\n      v-for=\"(value, key) in finalProps\"\r\n      :key=\"key\"\r\n      class=\"prop-item\"\r\n    >\r\n      <span class=\"label\" v-if=\"value.text\">{{value.text}}</span>\r\n      <component class=\"prop-component\" v-if=\"value\" :is=\"value.component\" :[value.valueProp]=\"value.value\" v-on=\"value.events\" v-bind=\"value.extraProps\">\r\n        <template v-if=\"value.options\">\r\n          <component v-for=\"(option, k) in value.options\" :key=\"k\" :is=\"value.subComponent\" :value=\"option.value\">{{option.text}}</component>\r\n        </template>\r\n      </component>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script setup lang=\"ts\">\r\nimport { defineProps, PropType, computed, defineEmits } from 'vue'\r\nimport { reduce } from 'lodash'\r\nimport { PropsToForms, mapPropsToForms } from '../propsMap'\r\nimport { TextComponentProps } from '../defaultProps'\r\n\r\ninterface FormProps {\r\n  component: string;\r\n  value: string;\r\n  extraProps?: { [key: string]: any };\r\n  text?: string;\r\n  subComponent?: string;\r\n  options?: { text: string; value: any }[];\r\n  valueProp: string;\r\n  eventName: string;\r\n  events: { [key: string]: (e: any) => void };\r\n}\r\n\r\nconst props = defineProps({\r\n  props: {\r\n    type: Object as PropType<TextComponentProps>,\r\n    required: true\r\n  }\r\n})\r\nconst emit = defineEmits(['change'])\r\nconst finalProps = computed(() => {\r\n  return reduce(props.props, (result, value, key) => {\r\n    const newKey = key as keyof TextComponentProps\r\n    const item = mapPropsToForms[newKey]\r\n    if (item) {\r\n      const { valueProp = 'value', eventName = 'change', initalTransform, afterTransform } = item\r\n      const newItem: FormProps = {\r\n        ...item,\r\n        value: initalTransform ? initalTransform(value) : value,\r\n        valueProp,\r\n        eventName,\r\n        events: {\r\n          [eventName]: (e: any) => { emit('change', { key, value: afterTransform ? afterTransform(e) : e })}\r\n        }\r\n      }\r\n      // item.value = item.initalTransform ? item.initalTransform(value) : value\r\n      // item.valueProp = item.valueProp ? item.valueProp : 'value'\r\n      // result[newKey] = item\r\n      result[newKey] = newItem\r\n    }\r\n    return result\r\n  // }, {} as Required<PropsToForms>)\r\n  }, {} as {[key: string]: FormProps})\r\n})\r\n</script>\r\n\r\n<style scoped lang=\"less\">\r\n.prop-item {\r\n  display: flex;\r\n  margin-bottom: 10px;\r\n  align-items: center;\r\n}\r\n.label {\r\n  width: 28%;\r\n}\r\n.prop-component {\r\n  width: 72%;\r\n}\r\n</style>\r\n"]}]}